@import "variables";
$prefix-for-webkit: true !default;
$prefix-for-mozilla: true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera: true !default;
$prefix-for-spec: true !default;

$all: webkit moz ms o spec;

@mixin prefixer ($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit and $prefix-for-webkit == true {
      -webkit-#{$property}: $value;
    }
    @else if $prefix == moz and $prefix-for-mozilla == true {
      -moz-#{$property}: $value;
    }
    @else if $prefix == ms and $prefix-for-microsoft == true {
      -ms-#{$property}: $value;
    }
    @else if $prefix == o and $prefix-for-opera == true {
      -o-#{$property}: $value;
    }
    @else if $prefix == spec and $prefix-for-spec == true {
      #{$property}: $value;
    }
    @else {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

@mixin border-radius($radius...) {
  @include prefixer(border-radius, $radius, $all);
}

@mixin transition($property...) {
  @include prefixer(transition, $property, $all);
}

@mixin box-shadow($shadow...) {
  @include prefixer(box-shadow, $shadow, $all);
}

@mixin box-sizing($type:border-box) {
  // border-box | padding-box | content-box
  @include prefixer(box-sizing, $type, $all);
}

@mixin transform($property...) {
  @include prefixer(transform, $property, $all);
}

@mixin placeholder($color, $font-size) {
  &::-webkit-input-placeholder { /* WebKit, Blink, Edge */
    color: $color;
    font-size: $font-size;
  }
  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: $color;
    font-size: $font-size;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: $color;
    font-size: $font-size;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
    color: $color;
    font-size: $font-size;
  }
}

@mixin cover-img {
  width: 100%;
  height: 100%;
  background: {
    repeat: no-repeat;
    position: center center;
    size: cover;
    attachment: fixed;
  }
}

//@mixin contain-img {
//  width: 100%;
//  height: 100%;
//  background: {
//    repeat: no-repeat;
//    position: center center;
//    size: contain;
//  }
//}

@mixin fill-img {
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@mixin contain-img {
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

@mixin hr-line {
  &:after {
    display: block;
    content: "";
    width: 100%;
    height: 1px;
    background-color: $gray-color-ultra-light;
  }
}

@mixin line-wrap($line) {
  overflow : hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
}

@mixin clear-fix() {
  &:after {
    content: '';
    display: block;
    clear: both;
  }
}

@mixin theme-btn() {
  background-image: linear-gradient(to right bottom, rgba(159, 88, 150, 0) 0, rgba(159, 88, 150, 0.6) 100%);
  font-weight: 400;
  border-radius: 5px;
  border: none;
  font-size: 18px;
  height: 45px;
  line-height: 45px;
}

@mixin blank-btn() {
  font-size: $small-font-size;
  color: $gray-color-dark;
  font-weight: $font-weight-normal;
  height: 30px;
  line-height: 30px;
  border: none;
  background-color: transparent;
  opacity: 1;

  &:hover {
    opacity: 0.8;
  }
}

@mixin center-modal() {
  text-align: center;
  white-space: nowrap;

  &:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
    width: 0;
  }

  :global {
    .ant-modal {
      display: inline-block;
      vertical-align: middle;
      top: 20px;
    }
  }
}
